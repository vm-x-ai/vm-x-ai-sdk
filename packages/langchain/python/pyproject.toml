[tool.coverage.run]
branch = true
source = [ "vmxai_langchain" ]

[tool.coverage.report]
exclude_lines = [ "if TYPE_CHECKING:" ]
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html:'../../../coverage/packages/langchain/python/html' --cov-report xml:'../../../coverage/packages/langchain/python/coverage.xml' --html='../../../reports/packages/langchain/python/unittests/html/index.html' --junitxml='../../../reports/langchain/packages/python/unittests/junit.xml'"

[tool.poetry]
name = "vm-x-ai-langchain"
version = "0.0.0"
description = "VM-X AI Langchain Python SDK"
authors = [ "VM-X Engineering <eng@vm-x.ai>" ]
maintainers = [ "VM-X Engineering <eng@vm-x.ai>" ]
license = "MIT"
readme = "README.md"
repository = "https://github.com/vm-x-ai/vm-x-ai-sdk"
keywords = [ "VM-X", "AI", "SDK", "Python", "LangChain" ]
classifiers = [
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3"
]
group = { }

  [[tool.poetry.packages]]
  include = "vmxai_langchain"

  [tool.poetry.dependencies]
  python = ">=3.8.1,<4"
  langchain-core = "^0.2.29"

    [tool.poetry.dependencies.vm-x-ai-sdk]
    path = "../../python"
    develop = true

[tool.ruff]
exclude = [
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "dist",
  "vmxai/protos"
]
line-length = 120
indent-width = 4

  [tool.ruff.lint]
  select = [ "E", "F", "UP", "B", "SIM", "I" ]
  ignore = [ "UP006", "UP007", "B028", "SIM105" ]
  fixable = [ "ALL" ]
  unfixable = [ ]

[build-system]
requires = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"
